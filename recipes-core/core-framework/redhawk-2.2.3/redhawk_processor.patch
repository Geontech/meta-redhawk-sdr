Index: src/control/sdr/devmgr/DeviceManager.Linux.armv7l.prf.xml
===================================================================
--- src.orig/control/sdr/devmgr/DeviceManager.Linux.armv7l.prf.xml
+++ /dev/null
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-This file is protected by Copyright. Please refer to the COPYRIGHT file 
-distributed with this source distribution.
-
-This file is part of REDHAWK core.
-
-REDHAWK core is free software: you can redistribute it and/or modify it under 
-the terms of the GNU Lesser General Public License as published by the Free 
-Software Foundation, either version 3 of the License, or (at your option) any 
-later version.
-
-REDHAWK core is distributed in the hope that it will be useful, but WITHOUT ANY 
-WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR 
-A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more 
-details.
-
-You should have received a copy of the GNU Lesser General Public License along 
-with this program.  If not, see http://www.gnu.org/licenses/.
--->
-
-<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
-<properties>
-    <!-- Provide a processor_name and os_name matching property -->
-    <simple id="DCE:c10fa291-0d82-49ec-a5e9-fcb5b9b21d17"
-            name="os_name"
-            mode="readonly"
-            type="string">
-        <description>
-            SCA required property describing the Operating System
-        </description>
-        <value>Linux</value>
-        <kind kindtype="allocation"/>
-        <action type="eq"/>
-    </simple>
-    <simple id="DCE:01859ee5-c022-454d-be95-b7124b6a208c"
-            name="processor_name"
-            mode="readonly"
-            type="string">
-        <description>
-            SCA required property describing the CPU type
-        </description>
-        <value>armv7l</value>
-        <kind kindtype="allocation"/>
-        <action type="eq"/>
-    </simple>
-</properties>
Index: src/control/sdr/devmgr/DeviceManager.Linux.embedded.prf.xml
===================================================================
--- /dev/null
+++ src/control/sdr/devmgr/DeviceManager.Linux.embedded.prf.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+This file is protected by Copyright. Please refer to the COPYRIGHT file 
+distributed with this source distribution.
+
+This file is part of REDHAWK core.
+
+REDHAWK core is free software: you can redistribute it and/or modify it under 
+the terms of the GNU Lesser General Public License as published by the Free 
+Software Foundation, either version 3 of the License, or (at your option) any 
+later version.
+
+REDHAWK core is distributed in the hope that it will be useful, but WITHOUT ANY 
+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR 
+A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more 
+details.
+
+You should have received a copy of the GNU Lesser General Public License along 
+with this program.  If not, see http://www.gnu.org/licenses/.
+-->
+
+<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
+<properties>
+    <!-- Provide a processor_name and os_name matching property -->
+    <simple id="DCE:c10fa291-0d82-49ec-a5e9-fcb5b9b21d17"
+            name="os_name"
+            mode="readonly"
+            type="string">
+        <description>
+            SCA required property describing the Operating System
+        </description>
+        <value>Linux</value>
+        <kind kindtype="allocation"/>
+        <action type="eq"/>
+    </simple>
+    <simple id="DCE:01859ee5-c022-454d-be95-b7124b6a208c"
+            name="processor_name"
+            mode="readonly"
+            type="string">
+        <description>
+            SCA required property describing the CPU type
+        </description>
+        <value>BB_REDHAWK_PROCESSOR</value>
+        <kind kindtype="allocation"/>
+        <action type="eq"/>
+    </simple>
+</properties>
Index: src/control/sdr/devmgr/DeviceManager.spd.xml
===================================================================
--- src.orig/control/sdr/devmgr/DeviceManager.spd.xml
+++ src/control/sdr/devmgr/DeviceManager.spd.xml
@@ -54,4 +54,16 @@ with this program.  If not, see http://w
         <os name="Linux" />
         <processor name="x86_64"/>
     </implementation>
+    <implementation id="DCE:4e93fddd-c570-4b85-816c-393f6ae92fe6">
+        <description>BB_REDHAWK_PROCESSOR Implementation of a Device Manager</description>
+        <propertyfile>
+            <localfile name="DeviceManager.Linux.embedded.prf.xml"/>
+        </propertyfile>
+        <code type="Executable">
+            <localfile name="DeviceManager"/>
+            <entrypoint>DeviceManager</entrypoint>
+        </code>
+        <os name="Linux" />
+        <processor name="BB_REDHAWK_PROCESSOR"/>
+    </implementation>
 </softpkg>
Index: src/control/sdr/devmgr/Makefile.am
===================================================================
--- src.orig/control/sdr/devmgr/Makefile.am
+++ src/control/sdr/devmgr/Makefile.am
@@ -19,7 +19,7 @@
 #
 
 devmgrdir = $(SDR_ROOT)/dev/mgr
-dist_devmgr_DATA = DeviceManager.spd.xml DeviceManager.scd.xml DeviceManager.prf.xml DeviceManager.Linux.x86.prf.xml DeviceManager.Linux.x86_64.prf.xml DeviceManager.Linux.armv7l.prf.xml
+dist_devmgr_DATA = DeviceManager.spd.xml DeviceManager.scd.xml DeviceManager.prf.xml DeviceManager.Linux.x86.prf.xml DeviceManager.Linux.x86_64.prf.xml DeviceManager.Linux.embedded.prf.xml
 devmgr_PROGRAMS = DeviceManager
 
 DeviceManager_SOURCES = main.cpp spdSupport.cpp process_utils.cpp DeviceManager_DeployerSupport.cpp DeviceManager_impl.cpp
Index: src/control/sdr/dommgr/DomainManager.spd.xml
===================================================================
--- src.orig/control/sdr/dommgr/DomainManager.spd.xml
+++ src/control/sdr/dommgr/DomainManager.spd.xml
@@ -36,8 +36,7 @@ with this program.  If not, see http://w
 		    <localfile name="DomainManager"/>
 		    <entrypoint>/mgr/DomainManager</entrypoint>
 		</code>
-		<processor name="x86_64"/>
-		<processor name="x86"/>
+		<processor name="BB_REDHAWK_PROCESSOR"/>
 		<os name="Linux"/>
 	</implementation>
 </softpkg>
Index: src/control/framework/nodebooter.cpp
===================================================================
--- src.orig/control/framework/nodebooter.cpp
+++ src/control/framework/nodebooter.cpp
@@ -1192,7 +1192,7 @@ int main(int argc, char* argv[])
     if (strcmp("i686", un.machine) == 0) {
         strcpy(un.machine, "x86");
     }
-    LOG_DEBUG(nodebooter, "Machine " << un.machine);
+    LOG_DEBUG(nodebooter, "Machine " << std::string("BB_REDHAWK_PROCESSOR"));
     LOG_DEBUG(nodebooter, "Version " << un.release);
     LOG_DEBUG(nodebooter, "OS " << un.sysname);
 
@@ -1210,7 +1210,7 @@ int main(int argc, char* argv[])
                                    ossie::Property::MODE_READONLY,
                                    ossie::Property::ACTION_EQ,
                                    ossie::Property::KIND_ALLOCATION,
-                                   std::string(un.machine));
+                                   std::string("BB_REDHAWK_PROCESSOR"));
     std::vector<const ossie::Property*> systemProps;
     systemProps.push_back(&osProp);
     systemProps.push_back(&procProp);
Index: src/control/sdr/devmgr/DeviceManager_impl.cpp
===================================================================
--- src.orig/control/sdr/devmgr/DeviceManager_impl.cpp
+++ src/control/sdr/devmgr/DeviceManager_impl.cpp
@@ -80,7 +80,7 @@ DeviceManager_impl::DeviceManager_impl(
 
     // save  os and processor when matching deployments
     addProperty(processor_name,
-                _uname.machine,
+                std::string("BB_REDHAWK_PROCESSOR"),
                 "DCE:fefb9c66-d14a-438d-ad59-2cfd1adb272b",
                 "processor_name",
                 "readonly",
@@ -511,7 +511,7 @@ void DeviceManager_impl::setupImplementa
 
     if (!found_impl){
         std::ostringstream oss;
-        oss << "Unable to find device manager implementation to match processor: " << _uname.machine;
+        oss << "Unable to find device manager implementation to match processor: " << std::string("BB_REDHAWK_PROCESSOR");
         RH_TRACE(this->_baseLog, oss.str() );
         throw std::runtime_error( oss.str().c_str());
     }
Index: src/control/sdr/devmgr/main.cpp
===================================================================
--- src.orig/control/sdr/devmgr/main.cpp
+++ src/control/sdr/devmgr/main.cpp
@@ -420,7 +420,7 @@ int main(int argc, char* argv[])
     if (strcmp("i686", un.machine) == 0) {
         strcpy(un.machine, "x86");
     }
-    RH_NL_DEBUG(logname, "Machine " << un.machine);
+    RH_NL_DEBUG(logname, "Machine " << std::string("BB_REDHAWK_PROCESSOR"));
     RH_NL_DEBUG(logname, "Version " << un.release);
     RH_NL_DEBUG(logname, "OS " << un.sysname);
     struct rlimit limit;
Index: src/control/sdr/dommgr/main.cpp
===================================================================
--- src.orig/control/sdr/dommgr/main.cpp
+++ src/control/sdr/dommgr/main.cpp
@@ -348,7 +348,7 @@ int old_main(int argc, char* argv[])
     if (strcmp("i686", un.machine) == 0) {
         strcpy(un.machine, "x86");
     }
-    RH_NL_DEBUG(logname, "Machine " << un.machine);
+    RH_NL_DEBUG(logname, "Machine " << std::string("BB_REDHAWK_PROCESSOR"));
     RH_NL_DEBUG(logname, "Version " << un.release);
     RH_NL_DEBUG(logname, "OS " << un.sysname);
     struct rlimit limit;
